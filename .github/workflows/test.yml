name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        poetry-version: ["1.5.1"]
        os: ["ubuntu-latest", "macos-latest"]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up poetry ${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Configure local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-os-${{ matrix.os }}-python-${{ matrix.python-version }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: poetry install
      - name: Linter
        run: |
          echo "Running black"
          poetry run black --check --config ./pyproject.toml .
          echo "Running isort"
          poetry run isort -c --sp ./pyproject.toml .
          echo "Running flake8"
          poetry run flake8 --config ./.flake8 .
          echo "Running mypy"
          poetry run mypy --config-file ./pyproject.toml .
      - name: Test
        run: |
          poetry run pytest -v
